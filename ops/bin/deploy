#!/usr/bin/env bash

function usage {
  cat <<EOS
Usage: ./deploy <connection-string> <environment>
 e.g.: ./deploy core@api.collision-staging.jackpine.me staging
EOS
}

function provision {
  ENVIRONMENT=$1

  if [ -z $ENVIRONMENT ]
  then
    usage
    exit 1
  fi

  docker ps -a | grep collision-db > /dev/null
  DB_ALREADY_DEPLOYED=$?
  if [ $DB_ALREADY_DEPLOYED -eq 0 ]
  then
    echo "Database previously deployed."
    docker start collision-db
  else
    echo "Deploying new database container."
    docker run --name collision-db -d mdillon/postgis
  fi

  echo "Pulling latest api container."
  docker pull jackpine/collision-api > /dev/null

  echo "Removing any pre-existing api container."
  docker stop collision-api > /dev/null
  docker rm collision-api > /dev/null

  echo "Starting new api container."
  docker run --name collision-api --link collision-db:collision-db -p 80:80 -d jackpine/collision-api

  echo "Copying config."
  docker exec -i collision-api bash -c "cat - > ~app/collision/api/.env" < ~/collision/ops/secrets/collision-$ENVIRONMENT-api.env

  echo "Restarting container."
  docker stop collision-api
  docker start collision-api
}

if [ "$#" == 2 ]
then
  HOST=$1
  ENVIRONMENT=$2

  echo "Remote deploying ${ENVIRONMENT} to ${HOST}."
  ssh $1 "$(typeset -f); provision $ENVIRONMENT"
else
  usage
  exit 1
fi
